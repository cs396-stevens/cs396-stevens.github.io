<svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1595.779472708702 10745" width="1595.779472708702" height="10745" class="excalidraw-svg"><!-- svg-source:excalidraw --><metadata><!-- payload-type:application/vnd.excalidraw+json --><!-- payload-version:2 --><!-- payload-start --><!-- payload-end --></metadata><defs><style class="style-fonts">
      @font-face { font-family: Excalifont; src: url(data:font/woff2;base64,); }
      @font-face { font-family: Comic Shanns; src: url(data:font/woff2;base64,); }</style></defs><rect x="0" y="0" width="1595.779472708702" height="10745" fill="#ffffff"></rect><g stroke-opacity="0.6" fill-opacity="0.6" stroke-linecap="round" transform="translate(250 2410) rotate(0 100 16.778204429673906)"><path d="M8.39 0 C58.01 4.42, 107.02 0.9, 191.61 0 C193.75 -3.4, 202.19 4.09, 200 8.39 C201.74 12.72, 198.91 18.23, 200 25.17 C199.94 31.05, 194.94 34.49, 191.61 33.56 C147.11 32.73, 106.53 32.28, 8.39 33.56 C3.6 32.68, -0.96 32.73, 0 25.17 C1.29 21.17, -1.57 10.04, 0 8.39 C1.05 -0.54, -0.06 2.59, 8.39 0" stroke="none" stroke-width="0" fill="#ffec99"></path><path d="M8.39 0 C68.2 0.8, 126.21 -0.9, 191.61 0 M8.39 0 C81.11 0.46, 154.1 -0.6, 191.61 0 M191.61 0 C198.35 1.48, 199.15 2.88, 200 8.39 M191.61 0 C196.24 -1.17, 201.59 3.61, 200 8.39 M200 8.39 C201.76 13.99, 199.09 21.26, 200 25.17 M200 8.39 C199.3 13.26, 200.94 16.17, 200 25.17 M200 25.17 C199.99 32.69, 196.13 34.87, 191.61 33.56 M200 25.17 C198.14 29.28, 197.04 33.4, 191.61 33.56 M191.61 33.56 C140.43 35.04, 88.97 35.16, 8.39 33.56 M191.61 33.56 C132.42 33.45, 71.22 33.94, 8.39 33.56 M8.39 33.56 C3.98 31.81, -1.75 30.04, 0 25.17 M8.39 33.56 C4.5 31.77, -1.6 30.42, 0 25.17 M0 25.17 C1.41 21.3, 0.38 15.37, 0 8.39 M0 25.17 C0.72 20.05, -0.76 15.21, 0 8.39 M0 8.39 C1.24 2.08, 1.5 -1.71, 8.39 0 M0 8.39 C-2.27 1.59, 0.78 -1.78, 8.39 0" stroke="transparent" stroke-width="2" fill="none"></path></g><g stroke-opacity="0.6" fill-opacity="0.6" stroke-linecap="round" transform="translate(250 2470) rotate(0 120 16.778204429673906)"><path d="M8.39 0 C83.17 1.02, 160.26 5.27, 231.61 0 C237.64 -0.53, 237.2 5.59, 240 8.39 C240.55 12.33, 241.2 20.33, 240 25.17 C242.93 29.36, 237.08 37.08, 231.61 33.56 C145.31 32.59, 53.45 34.67, 8.39 33.56 C5.47 32.02, 0.14 29.25, 0 25.17 C2.57 23.14, 1.93 19.75, 0 8.39 C-2.09 0.58, 2.2 -1.78, 8.39 0" stroke="none" stroke-width="0" fill="#ffec99"></path><path d="M8.39 0 C93.86 -0.3, 175.95 -0.6, 231.61 0 M8.39 0 C67.65 0.7, 127.16 1.26, 231.61 0 M231.61 0 C237.55 -0.47, 238.17 4.04, 240 8.39 M231.61 0 C236.07 1.6, 241.18 2.85, 240 8.39 M240 8.39 C239.54 11.39, 239.49 15.93, 240 25.17 M240 8.39 C239.56 11.75, 239.4 16.42, 240 25.17 M240 25.17 C239.14 29.3, 235.39 33.34, 231.61 33.56 M240 25.17 C239.33 29.65, 238.69 34.19, 231.61 33.56 M231.61 33.56 C184.98 33.39, 140.71 33.99, 8.39 33.56 M231.61 33.56 C171.01 32.15, 109.84 32.93, 8.39 33.56 M8.39 33.56 C1.37 31.68, 0.27 29.81, 0 25.17 M8.39 33.56 C2.15 32.35, -0.25 32.24, 0 25.17 M0 25.17 C-0.42 21.78, -0.32 15.34, 0 8.39 M0 25.17 C-0.21 18.83, 0.55 14.07, 0 8.39 M0 8.39 C0.59 3.02, 1.21 1.45, 8.39 0 M0 8.39 C0.07 3.95, 2.27 0.69, 8.39 0" stroke="transparent" stroke-width="2" fill="none"></path></g><g stroke-opacity="0.6" fill-opacity="0.6" stroke-linecap="round" transform="translate(250 2530) rotate(0 200 16.778204429673906)"><path d="M8.39 0 C128.8 -3.7, 250.86 -1.41, 391.61 0 C395.67 0.14, 398.49 0.97, 400 8.39 C402.26 16.72, 403.05 19.01, 400 25.17 C397.78 30.17, 395.42 35.94, 391.61 33.56 C288.88 35.23, 181.93 38.9, 8.39 33.56 C0.86 35.91, -2.9 28.44, 0 25.17 C1.76 23.18, 0.96 14.9, 0 8.39 C1.75 2.48, 3.79 -0.05, 8.39 0" stroke="none" stroke-width="0" fill="#ffec99"></path><path d="M8.39 0 C158.43 0.36, 309.57 -0.14, 391.61 0 M8.39 0 C111.4 0.66, 215.34 0.8, 391.61 0 M391.61 0 C395.74 -1.82, 399.78 2.22, 400 8.39 M391.61 0 C396.09 1.48, 400.63 0.59, 400 8.39 M400 8.39 C399.05 12.08, 399.64 15.07, 400 25.17 M400 8.39 C399.32 12.51, 400.07 15.65, 400 25.17 M400 25.17 C398.12 31.03, 396.26 32.99, 391.61 33.56 M400 25.17 C398.79 30.51, 398.69 33.43, 391.61 33.56 M391.61 33.56 C273.6 32.79, 153.42 33.42, 8.39 33.56 M391.61 33.56 C262.16 33.59, 133.82 33.33, 8.39 33.56 M8.39 33.56 C3.02 31.97, 1.45 30.82, 0 25.17 M8.39 33.56 C3.95 33.03, 0.69 31.57, 0 25.17 M0 25.17 C-0.94 19.99, 1.36 12.65, 0 8.39 M0 25.17 C0.41 19.91, 0.62 15.79, 0 8.39 M0 8.39 C-1.09 3.7, 3.31 1.63, 8.39 0 M0 8.39 C-0.9 2.72, 5.05 2.23, 8.39 0" stroke="transparent" stroke-width="2" fill="none"></path></g><g stroke-opacity="0.6" fill-opacity="0.6" stroke-linecap="round" transform="translate(250 2590) rotate(0 170 16.778204429673906)"><path d="M8.39 0 C96.58 -0.76, 188.51 -2.45, 331.61 0 C335.79 3.39, 337.17 1.47, 340 8.39 C337.41 11.13, 336.96 14.32, 340 25.17 C338.74 28.4, 340.25 32.01, 331.61 33.56 C257.59 31.9, 186.64 33.8, 8.39 33.56 C-0.66 30.41, 1.65 28.43, 0 25.17 C-0.83 19.17, -1.24 18.5, 0 8.39 C-2.64 3.63, 3.41 -2.56, 8.39 0" stroke="none" stroke-width="0" fill="#ffec99"></path><path d="M8.39 0 C110.95 -1.2, 216.76 -2.34, 331.61 0 M8.39 0 C89.41 0.41, 170.78 -0.11, 331.61 0 M331.61 0 C336.78 0.96, 340.69 1.57, 340 8.39 M331.61 0 C336.1 -0.31, 339.3 4.67, 340 8.39 M340 8.39 C340.42 12.65, 341.14 19.57, 340 25.17 M340 8.39 C340.49 14.54, 340.82 19.99, 340 25.17 M340 25.17 C338.1 32.02, 339.18 34.73, 331.61 33.56 M340 25.17 C341.78 29.94, 338.13 35.48, 331.61 33.56 M331.61 33.56 C260.63 30.77, 189.15 30.7, 8.39 33.56 M331.61 33.56 C254.6 32.42, 176.32 32.09, 8.39 33.56 M8.39 33.56 C2.29 34.56, -0.76 29.83, 0 25.17 M8.39 33.56 C2.29 31.82, -1.56 29.16, 0 25.17 M0 25.17 C1.17 20.96, 0.95 19.21, 0 8.39 M0 25.17 C0.41 19.58, -0.79 13.08, 0 8.39 M0 8.39 C-0.66 1.79, 2.33 -0.69, 8.39 0 M0 8.39 C0.67 1.9, 4.97 0.4, 8.39 0" stroke="transparent" stroke-width="2" fill="none"></path></g><g transform="translate(190 10) rotate(0 83.6999740600586 22.5)"><text x="0" y="31.716" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="36px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">Lecture 8</text></g><g transform="translate(190 70) rotate(0 261.5058989226818 17.5)"><text x="0" y="24.668" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="28px" fill="#868e96" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">CS 396: Security, Privacy, and Society</text></g><g transform="translate(190 510) rotate(0 130.76995849609375 22.5)"><text x="0" y="31.716" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="36px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">Announcements</text></g><g transform="translate(190 1110) rotate(0 61.199981689453125 22.5)"><text x="0" y="31.716" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="36px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">Outline</text></g><g transform="translate(190 1210) rotate(0 206.47191309928894 17.5)"><text x="0" y="24.668" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="28px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">Robust Programming Principles</text></g><g transform="translate(190 1270) rotate(0 142.4639230966568 17.5)"><text x="0" y="24.668" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="28px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">Fragile Code Example</text></g><g transform="translate(190 1710) rotate(0 177.083922624588 22.5)"><text x="0" y="31.716" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="36px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">Robust Programming</text></g><g transform="translate(190 1810) rotate(0 350.6624150586448 35)"><text x="0" y="24.668" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="28px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">a programming style that emphasizes prevention of</text><text x="0" y="59.668" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="28px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">abnormal termination or unexpected actions</text></g><g transform="translate(190 1910) rotate(0 350.6624150586448 17.5)"><text x="0" y="24.668" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="28px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">aka "bomb-proof programming"</text></g><g transform="translate(190 2310) rotate(0 291.88789546489716 22.5)"><text x="0" y="31.716" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="36px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">Principles of Robust Programming</text></g><g transform="translate(250 2410) rotate(0 320 17.5)"><text x="0" y="24.668" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="28px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">Be Paranoid</text></g><g transform="translate(190 2410) rotate(0 9.813995361328125 17.5)"><text x="0" y="24.668" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="28px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">1.</text></g><g transform="translate(190 2470) rotate(0 13.635993957519531 17.5)"><text x="0" y="24.668" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="28px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">2.</text></g><g transform="translate(190 2530) rotate(0 12.347991943359375 17.5)"><text x="0" y="24.668" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="28px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">3.</text></g><g transform="translate(190 2590) rotate(0 12.025993347167969 17.5)"><text x="0" y="24.668" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="28px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">4.</text></g><g transform="translate(250 2470) rotate(0 320 17.5)"><text x="0" y="24.668" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="28px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">Assume Stupidity</text></g><g transform="translate(250 2530) rotate(0 320 17.5)"><text x="0" y="24.668" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="28px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">Avoid Dangerous Implements</text></g><g transform="translate(250 2590) rotate(0 320 17.5)"><text x="0" y="24.668" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="28px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">Never Say "Can't Happen"</text></g><g transform="translate(190 3010) rotate(0 105.38996124267578 22.5)"><text x="0" y="31.716" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="36px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">Be Paranoid</text></g><g transform="translate(230 3170) rotate(0 320 12.5)"><text x="0" y="17.619999999999997" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">"don't trust anything you don't generate"</text></g><g transform="translate(230 3210) rotate(0 320 12.5)"><text x="0" y="17.619999999999997" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">always assume someone is trying to break your stuff</text></g><g transform="translate(230 3250) rotate(0 320 12.5)"><text x="0" y="17.619999999999997" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">always check that functions you call succeed</text></g><g transform="translate(230 3290) rotate(0 320 25)"><text x="0" y="17.619999999999997" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">always assume your code will have problems.</text><text x="0" y="42.62" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">try make them easy to detect and address</text></g><g transform="translate(190 3110) rotate(0 186.01791381835938 17.5)"><text x="0" y="24.668" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="28px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">Examples of good paranoia:</text></g><g transform="translate(190 3710) rotate(0 150.29995727539062 22.5)"><text x="0" y="31.716" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="36px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">Assume Stupidity</text></g><g transform="translate(190 3810) rotate(0 64.72196960449219 17.5)"><text x="0" y="24.668" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="28px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">Examples:</text></g><g transform="translate(230 3870) rotate(0 320 12.5)"><text x="0" y="17.619999999999997" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">always assume the user won't read the documentation</text></g><g transform="translate(230 3910) rotate(0 320 12.5)"><text x="0" y="17.619999999999997" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">programs should handle all inputs "reasonably" (input validation)</text></g><g stroke-linecap="round"><g transform="translate(463.3620009924074 3933.5911574631077) rotate(0 10 0)"><path d="M-0.24 -0.43 C3.2 -0.47, 16.93 -0.43, 20.26 -0.38 M0.63 0.54 C4.07 0.58, 16.86 0.15, 19.96 0.12" stroke="#1e1e1e" stroke-width="2" fill="none"></path></g></g><mask></mask><g transform="translate(230 3950) rotate(0 320 12.5)"><text x="0" y="17.619999999999997" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">error messages should be self-explanatory</text></g><g transform="translate(230 3990) rotate(0 320 12.5)"><text x="0" y="17.619999999999997" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">error codes should have unambiguous, detailed explanations</text></g><g transform="translate(230 4030) rotate(0 320 12.5)"><text x="0" y="17.619999999999997" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">errors should not propagate</text></g><g transform="translate(190 4410) rotate(0 249.40792846679688 22.5)"><text x="0" y="31.716" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="36px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">Avoid Dangerous Implements</text></g><g transform="translate(190 4650) rotate(0 64.72196960449219 17.5)"><text x="0" y="24.668" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="28px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">Examples:</text></g><g transform="translate(230 4710) rotate(0 320 25)"><text x="0" y="17.619999999999997" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">don't expect files to stay the same across calls unless you can</text><text x="0" y="42.62" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">enforce access control</text></g><g transform="translate(230 4770) rotate(0 320 12.5)"><text x="0" y="17.619999999999997" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">never return pointers or indices into arrays</text></g><g transform="translate(230 4810) rotate(0 320 12.5)"><text x="0" y="17.619999999999997" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">use good abstractions</text></g><g transform="translate(190 4510) rotate(0 160.3979457616806 17.5)"><text x="0" y="24.668" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="28px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">"dangerous implement" =</text></g><g transform="translate(530 4510) rotate(0 180 52.5)"><text x="0" y="24.668" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="28px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">anything your routines</text><text x="0" y="59.668" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="28px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">expect to remain</text><text x="0" y="94.668" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="28px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">consistent across calls</text></g><g transform="translate(190 5210) rotate(0 216.91790771484375 22.5)"><text x="0" y="31.716" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="36px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">Never Say "Can't Happen"</text></g><g transform="translate(190 5310) rotate(0 305.7458190917969 17.5)"><text x="0" y="24.668" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="28px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">things are not impossible. just highly unlikely.</text></g><g transform="translate(190 5370) rotate(0 281.58184814453125 17.5)"><text x="0" y="24.668" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="28px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">decide how to deal with impossible cases.</text></g><g transform="translate(190 5430) rotate(0 64.72196960449219 17.5)"><text x="0" y="24.668" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="28px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">Examples:</text></g><g transform="translate(230 5490) rotate(0 320 12.5)"><text x="0" y="17.619999999999997" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">using assert statements to constrain states and fail fast</text></g><g transform="translate(190 6010) rotate(0 183.16793167591095 22.5)"><text x="0" y="31.716" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="36px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">Fragile Code Example</text></g><g transform="translate(190 6190) rotate(0 190.02191162109375 17.5)"><text x="0" y="24.668" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="28px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">fqlib.h (fragile queue library)</text></g><g transform="translate(190 6250) rotate(0 410 200)"><text x="0" y="17.5" font-family="Comic Shanns, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">/*</text><text x="0" y="42.5" font-family="Comic Shanns, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic"> * the queue structure</text><text x="0" y="67.5" font-family="Comic Shanns, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic"> */</text><text x="0" y="92.5" font-family="Comic Shanns, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">typedef struct queue {</text><text x="0" y="117.5" font-family="Comic Shanns, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">    int *que;       /* the actual array of queue elements */</text><text x="0" y="142.5" font-family="Comic Shanns, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">    int head;       /* head index in que of the queue */</text><text x="0" y="167.5" font-family="Comic Shanns, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">    int count;      /* number of elements in queue */</text><text x="0" y="192.5" font-family="Comic Shanns, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">    int size;       /* max number of elements in queue */</text><text x="0" y="217.5" font-family="Comic Shanns, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">} QUEUE;</text><text x="0" y="242.5" font-family="Comic Shanns, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic"></text><text x="0" y="267.5" font-family="Comic Shanns, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">/*</text><text x="0" y="292.5" font-family="Comic Shanns, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic"> * the library functions</text><text x="0" y="317.5" font-family="Comic Shanns, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic"> */</text><text x="0" y="342.5" font-family="Comic Shanns, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">void qmanage(QUEUE **, int, int);    /* create or delete a queue */</text><text x="0" y="367.5" font-family="Comic Shanns, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">void put_on_queue(QUEUE *, int);     /* add to queue */</text><text x="0" y="392.5" font-family="Comic Shanns, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">void take_off_queue(QUEUE *, int *); /* pull off queue */</text></g><g transform="translate(190 6710) rotate(0 73.85397189855576 22.5)"><text x="0" y="31.716" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="36px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">Exercise</text></g><g transform="translate(190 6810) rotate(0 350 35)"><text x="0" y="24.668" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="28px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">What's principle of robust programming does this</text><text x="0" y="59.668" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="28px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">violate?</text></g><g transform="translate(10 6710) rotate(0 54.23398005962372 22.5)"><text x="0" y="31.716" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="36px" fill="#f08c00" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">PollEv</text></g><g transform="translate(190 7110) rotate(0 350 35)"><text x="0" y="24.668" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="28px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">Bonus: what vulnerability type would this be in the</text><text x="0" y="59.668" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="28px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">Protection Analysis model from Wednesday?</text></g><g transform="translate(290 6910) rotate(0 81.96996307373047 17.5)"><text x="0" y="24.668" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="28px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">Be Paranoid</text></g><g transform="translate(230 6910) rotate(0 15.091995239257812 17.5)"><text x="0" y="24.668" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="28px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">A)</text></g><g transform="translate(230 6950) rotate(0 16.281997680664062 17.5)"><text x="0" y="24.668" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="28px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">B)</text></g><g transform="translate(230 6990) rotate(0 14.433998107910156 17.5)"><text x="0" y="24.668" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="28px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">C)</text></g><g transform="translate(230 7030) rotate(0 16.547996520996094 17.5)"><text x="0" y="24.668" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="28px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">D)</text></g><g transform="translate(290 6950) rotate(0 116.89994812011719 17.5)"><text x="0" y="24.668" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="28px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">Assume Stupidity</text></g><g transform="translate(290 6990) rotate(0 193.98391723632812 17.5)"><text x="0" y="24.668" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="28px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">Avoid Dangerous Implements</text></g><g transform="translate(290 7030) rotate(0 168.71392822265625 17.5)"><text x="0" y="24.668" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="28px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">Never Say "Can't Happen"</text></g><g transform="translate(190 7610) rotate(0 86.66997528076172 22.5)"><text x="0" y="31.716" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="36px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">qmanage()</text></g><g transform="translate(190 7710) rotate(0 350 275)"><text x="0" y="17.5" font-family="Comic Shanns, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">/*</text><text x="0" y="42.5" font-family="Comic Shanns, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic"> * create or delete a queue</text><text x="0" y="67.5" font-family="Comic Shanns, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic"> *</text><text x="0" y="92.5" font-family="Comic Shanns, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic"> * PARAMETERS: QUEUE **qptr   space for, or pointer to, queue</text><text x="0" y="117.5" font-family="Comic Shanns, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic"> *             int flag       1 for create, 0 for delete</text><text x="0" y="142.5" font-family="Comic Shanns, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic"> *             int size       max elements in queue</text><text x="0" y="167.5" font-family="Comic Shanns, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic"> */</text><text x="0" y="192.5" font-family="Comic Shanns, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">void qmanage(QUEUE **qptr, int flag, int size)</text><text x="0" y="217.5" font-family="Comic Shanns, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">{</text><text x="0" y="242.5" font-family="Comic Shanns, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">    if (flag){</text><text x="0" y="267.5" font-family="Comic Shanns, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">        /* allocate a new queue */</text><text x="0" y="292.5" font-family="Comic Shanns, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">        *qptr = malloc(sizeof(QUEUE));</text><text x="0" y="317.5" font-family="Comic Shanns, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">        (*qptr)-&gt;head = (*qptr)-&gt;count = 0;</text><text x="0" y="342.5" font-family="Comic Shanns, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">        (*qptr)-&gt;que = malloc(size * sizeof(int));</text><text x="0" y="367.5" font-family="Comic Shanns, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">        (*qptr)-&gt;size = size;</text><text x="0" y="392.5" font-family="Comic Shanns, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">    }</text><text x="0" y="417.5" font-family="Comic Shanns, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">    else{</text><text x="0" y="442.5" font-family="Comic Shanns, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">        /* delete the current queue */</text><text x="0" y="467.5" font-family="Comic Shanns, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">        (void) free((*qptr)-&gt;que);</text><text x="0" y="492.5" font-family="Comic Shanns, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">        (void) free(*qptr);</text><text x="0" y="517.5" font-family="Comic Shanns, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">    }</text><text x="0" y="542.5" font-family="Comic Shanns, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">}</text></g><g transform="translate(190 8610) rotate(0 137.93396973609924 22.5)"><text x="0" y="31.716" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="36px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">put_on_queue()</text></g><g transform="translate(190 8710) rotate(0 329.36000061035156 150)"><text x="0" y="17.5" font-family="Comic Shanns, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">/*</text><text x="0" y="42.5" font-family="Comic Shanns, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic"> * add an element to an existing queue</text><text x="0" y="67.5" font-family="Comic Shanns, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic"> *</text><text x="0" y="92.5" font-family="Comic Shanns, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic"> * PARAMETERS: QUEUE *qptr   pointer for queue involved</text><text x="0" y="117.5" font-family="Comic Shanns, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic"> *             int n         element to be appended</text><text x="0" y="142.5" font-family="Comic Shanns, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic"> */</text><text x="0" y="167.5" font-family="Comic Shanns, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">void put_on_queue(QUEUE *qptr, int n)</text><text x="0" y="192.5" font-family="Comic Shanns, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">{</text><text x="0" y="217.5" font-family="Comic Shanns, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">    /* add new element to tail of queue */</text><text x="0" y="242.5" font-family="Comic Shanns, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">    qptr-&gt;que[(qptr-&gt;head + qptr-&gt;count) % qptr-&gt;size] = n;</text><text x="0" y="267.5" font-family="Comic Shanns, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">    qptr-&gt;count++;</text><text x="0" y="292.5" font-family="Comic Shanns, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">}</text></g><g transform="translate(190 9410) rotate(0 154.69195556640625 22.5)"><text x="0" y="31.716" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="36px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">take_off_queue()</text></g><g transform="translate(190 9510) rotate(0 357.4499969482422 162.5)"><text x="0" y="17.5" font-family="Comic Shanns, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">/*</text><text x="0" y="42.5" font-family="Comic Shanns, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic"> * take an element off the front of an existing queue</text><text x="0" y="67.5" font-family="Comic Shanns, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic"> *</text><text x="0" y="92.5" font-family="Comic Shanns, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic"> * PARAMETERS: QUEUE *qptr   pointer for queue involved</text><text x="0" y="117.5" font-family="Comic Shanns, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic"> *             int *n        storage for the return element</text><text x="0" y="142.5" font-family="Comic Shanns, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic"> */</text><text x="0" y="167.5" font-family="Comic Shanns, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">void take_off_queue(QUEUE *qptr, int *n)</text><text x="0" y="192.5" font-family="Comic Shanns, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">{</text><text x="0" y="217.5" font-family="Comic Shanns, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">    /* return the element at the head of the queue */</text><text x="0" y="242.5" font-family="Comic Shanns, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">    *n = qptr-&gt;que[qptr-&gt;head++];</text><text x="0" y="267.5" font-family="Comic Shanns, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">    qptr-&gt;count--;</text><text x="0" y="292.5" font-family="Comic Shanns, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">    qptr-&gt;head %= qptr-&gt;size;</text><text x="0" y="317.5" font-family="Comic Shanns, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">}</text></g><g transform="translate(190 6110) rotate(0 291.5 12.5)"><text x="0" y="17.5" font-family="Comic Shanns, Segoe UI Emoji" font-size="20px" fill="#868e96" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">wget "https://cs396-stevens.github.io/src/robust.zip"</text></g><g transform="translate(190 10210) rotate(0 72.48598223924637 22.5)"><text x="0" y="31.716" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="36px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">Summary</text></g><g transform="translate(186.91702662014995 10303.532351359208) rotate(0 90.15996551513672 17.5)"><text x="0" y="24.668" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="28px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">Bad Ideas™:</text></g><g transform="translate(230 10350) rotate(0 267.60979494452477 12.5)"><text x="0" y="17.619999999999997" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">callers can access internal elements of queue structure</text></g><g transform="translate(230 10390) rotate(0 243.4998517036438 12.5)"><text x="0" y="17.619999999999997" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">order of elements in parameter list is not checked</text></g><g transform="translate(230 10430) rotate(0 199.54986083507538 12.5)"><text x="0" y="17.619999999999997" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">value of command parameters is arbitrary</text></g><g transform="translate(230 10470) rotate(0 148.23991030454636 12.5)"><text x="0" y="17.619999999999997" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">double pointers are a bad idea</text></g><g transform="translate(230 10510) rotate(0 168.7098816037178 12.5)"><text x="0" y="17.619999999999997" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">parameters are not sanity checked</text></g><g transform="translate(230 10550) rotate(0 194.63986814022064 12.5)"><text x="0" y="17.619999999999997" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">structure values are not sanity checked</text></g><g transform="translate(230 10590) rotate(0 199.76985776424408 12.5)"><text x="0" y="17.619999999999997" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">sequences of operations are not checked</text></g><g transform="translate(230 10630) rotate(0 253.05982419848442 12.5)"><text x="0" y="17.619999999999997" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">return values from library functions are not checked</text></g><g transform="translate(230 10670) rotate(0 169.55987548828125 12.5)"><text x="0" y="17.619999999999997" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">integer overflow/underflow ignored</text></g><g transform="translate(230 10710) rotate(0 160.62987792491913 12.5)"><text x="0" y="17.619999999999997" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">array overflow/underflow ignored</text></g><g transform="translate(190 1352.5) rotate(0 171.87982177734375 10)"><text x="0" y="14.096" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="16px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">1: Bishop, Matt. "Robust Programming". 2011</text></g><g transform="translate(610 1210) rotate(0 3.4159927368164062 10)"><text x="0" y="14.096" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="16px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">1</text></g><g transform="translate(190.8708123680998 610) rotate(0 136.24792802333832 17.5)"><text x="0" y="24.668" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="28px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">lab 2 is due tonight</text></g><g transform="translate(190 657.164657406149) rotate(0 336.349853515625 17.5)"><text x="0" y="24.668" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="28px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">i'll be in my office from 3-5p if anyone needs help.</text></g><g transform="translate(190 717.164657406149) rotate(0 339.13584327697754 52.5)"><text x="0" y="24.668" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="28px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">clarify lab grading: (will update syllabus)</text><text x="0" y="59.668" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="28px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">    each lab is 100 pts</text><text x="0" y="94.668" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="28px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">    each challenge/level has proportional worth</text></g><g stroke-linecap="round" transform="translate(210 6990) rotate(0 30 20)"><path d="M18.87 1.38 C24.28 -0.45, 32.16 0.26, 38.27 1.66 C44.37 3.05, 51.82 6.17, 55.49 9.74 C59.16 13.3, 61.23 18.94, 60.28 23.04 C59.32 27.13, 54.7 31.34, 49.75 34.32 C44.8 37.29, 37.02 40.51, 30.59 40.87 C24.17 41.22, 16.18 39.14, 11.2 36.46 C6.23 33.77, 2.09 28.89, 0.73 24.76 C-0.63 20.64, -1.07 15.82, 3.03 11.72 C7.13 7.61, 20.64 1.88, 25.34 0.13 C30.04 -1.62, 31.42 0.75, 31.22 1.24 M30.05 0.4 C36.1 -0.02, 44.38 0.53, 49.47 3.37 C54.55 6.21, 59.26 12.84, 60.56 17.45 C61.85 22.05, 60.84 27.65, 57.22 31 C53.61 34.35, 44.99 36.46, 38.86 37.54 C32.73 38.62, 26.51 39.01, 20.45 37.47 C14.38 35.94, 5.65 31.98, 2.48 28.34 C-0.68 24.7, 0.06 19.49, 1.45 15.61 C2.83 11.74, 6.18 7.9, 10.78 5.09 C15.39 2.28, 25.62 -0.43, 29.08 -1.26 C32.55 -2.09, 31.25 -0.34, 31.59 0.09" stroke="#e03131" stroke-width="2" fill="none"></path></g><g transform="translate(258.01119970728996 7219.864374840848) rotate(0 286.6358642578125 17.5)"><text x="0" y="24.668" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="28px" fill="#e03131" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">improper isolation of implementation detail</text></g><g transform="translate(730 7870) rotate(0 251.4198455810547 12.5)"><text x="0" y="17.619999999999997" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="20px" fill="#e03131" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">why is it doing more than 1 thing? (create + delete)</text></g><g transform="translate(730 7910) rotate(0 219.7198718264699 12.5)"><text x="0" y="17.619999999999997" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="20px" fill="#e03131" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">flag: what value creates, what value deletes?</text></g><g transform="translate(730 7950) rotate(0 157.96990966796875 12.5)"><text x="0" y="17.619999999999997" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="20px" fill="#e03131" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">double pointers are bad (**qptr)</text></g><g transform="translate(770 7990) rotate(0 164.31988525390625 12.5)"><text x="0" y="17.619999999999997" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="20px" fill="#e03131" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">value of flag feels arbitrary. it is.</text></g><g transform="translate(770.7109352049538 8027.51413872118) rotate(0 128.1799072027206 12.5)"><text x="0" y="17.619999999999997" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="20px" fill="#e03131" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">shouldn't flag be an enum?</text></g><g transform="translate(770 8070) rotate(0 92.26993867754936 12.5)"><text x="0" y="17.619999999999997" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="20px" fill="#e03131" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">what if flag = -37?</text></g><g transform="translate(770 8110) rotate(0 124.42992860078812 12.5)"><text x="0" y="17.619999999999997" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="20px" fill="#e03131" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">potential for double free!</text></g><g transform="translate(770 8150) rotate(0 102.85994264483452 12.5)"><text x="0" y="17.619999999999997" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="20px" fill="#e03131" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">what if qptr = NULL?</text></g><g transform="translate(770 8190) rotate(0 78.39994812011719 12.5)"><text x="0" y="17.619999999999997" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="20px" fill="#e03131" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">what if size &lt; 0</text></g><g transform="translate(770 8230) rotate(0 253.44979858398438 12.5)"><text x="0" y="17.619999999999997" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="20px" fill="#e03131" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">what if size is huge? overflow b/c size * sizeof(int)</text></g><g transform="translate(690 8270) rotate(0 121.51993104815483 12.5)"><text x="0" y="17.619999999999997" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="20px" fill="#e03131" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">what does malloc return?</text></g><g transform="translate(850 8690) rotate(0 233.62984496355057 25)"><text x="0" y="17.619999999999997" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="20px" fill="#e03131" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">qptr null?</text><text x="0" y="42.62" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="20px" fill="#e03131" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">n not unsigned? n too big? (maybe not an issue)</text></g><g transform="translate(851.0278549001102 8757.009168734357) rotate(0 83.5699493587017 12.5)"><text x="0" y="17.619999999999997" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="20px" fill="#e03131" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">what if size = 0?</text></g><g transform="translate(850 8790) rotate(0 102.3799316585064 12.5)"><text x="0" y="17.619999999999997" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="20px" fill="#e03131" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">what if queue is full?</text></g><g transform="translate(850 8830) rotate(0 367.88973635435104 12.5)"><text x="0" y="17.619999999999997" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="20px" fill="#e03131" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">design decision: why return void? how do we know if it succeeded or failed?</text></g><g transform="translate(850 8870) rotate(0 195.269844353199 12.5)"><text x="0" y="17.619999999999997" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="20px" fill="#e03131" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">no consistency checking, sanity checking</text></g><g transform="translate(850 8910) rotate(0 121.83992311358452 12.5)"><text x="0" y="17.619999999999997" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="20px" fill="#e03131" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">what if qptr-&gt;que is null?</text></g><g transform="translate(869.748339941839 9557.76281922894) rotate(0 91.52991944551465 12.5)"><text x="0" y="17.619999999999997" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="20px" fill="#e03131" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">parameter checking</text></g><g transform="translate(870 9590) rotate(0 128.71987915039062 12.5)"><text x="0" y="17.619999999999997" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="20px" fill="#e03131" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">value/consistency checking</text></g><g transform="translate(870 9630) rotate(0 91.6399154663086 12.5)"><text x="0" y="17.619999999999997" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="20px" fill="#e03131" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">edge case checking</text></g></svg>